{{define "READDSFUNC" }}
func dataSource{{.fpath}}Read(d *schema.ResourceData, m interface{}) error {
	c := m.(*FortiClient).Client
	c.Retries = 1
	urlparams := make(map[string][]string)

	vdomparam := ""

	if v, ok := d.GetOk("vdomparam"); ok {
		if s, ok := v.(string); ok {
			vdomparam = s
		}
	}

	mkey := ""
	key := {{.results.mkey | printf "%q"}}
	t := d.Get(key)
	if v, ok := t.(string); ok {
		mkey = v
	} else if v, ok := t.(int); ok {
		mkey = strconv.Itoa(v)
	} else {
		return fmt.Errorf("error describing {{.fpath}}: type error")
	}

	o, err := c.Read{{.fpath}}(mkey, vdomparam, urlparams, 0)
	if err != nil {
		return fmt.Errorf("error describing {{.fpath}}: %v", err)
	}

	if o == nil {
		d.SetId("")
		return nil
	}

	err = dataSourceRefreshObject{{.fpath}}(d, o)
	if err != nil {
		return fmt.Errorf("error describing {{.fpath}} from API: %v", err)
	}

	d.SetId(mkey)

	return nil
}
{{ end }}