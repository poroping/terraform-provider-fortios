{{ define "resource" }}
{{ template "HEADER" . }}
package provider

import (
	"context"
	"fmt"

	"github.com/hashicorp/terraform-plugin-sdk/v2/diag"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"
	"github.com/poroping/forti-sdk-go/v2/models"
	"github.com/poroping/terraform-provider-fortios/v2/utils"
	"github.com/poroping/terraform-provider-fortios/v2/validators"
	"github.com/poroping/terraform-provider-fortios/v2/suppressors"
)

func resource{{.fpath}}() *schema.Resource {
	return &schema.Resource{
		Description: "{{ .results.help }}",

		CreateContext: resource{{.fpath}}Create,
		ReadContext:   resource{{.fpath}}Read,
		UpdateContext: resource{{.fpath}}Update,
		DeleteContext: resource{{.fpath}}Delete,

		Importer: &schema.ResourceImporter{
			StateContext: schema.ImportStatePassthroughContext,
		},

		Schema: map[string]*schema.Schema{
			"vdomparam": {
				Type:     schema.TypeString,
				Description: "Specifies the vdom to which the resource will be applied when the FortiGate unit is running in VDOM mode. If you want to inherit the VDOM configuration of the provider, do not set this parameter.",
				Optional: true,
				ForceNew: true,
			},
			{{- if .results.mkey }}
			"allow_append": {
				Type:         schema.TypeBool,
				Description: "If set to true allows provider to overwrite existing resources instead of erroring. Useful for brownfield implementations. Use with caution!",
				Optional:     true,
				Default:      false,
				{{ if eq .results.mkey "id" }}RequiredWith: []string{ "fosid" },{{ else if or (eq .results.mkey "seq-num") }}RequiredWith: []string{ {{- (flatten .results.mkey) | printf "%q" -}} },{{ else }}{{- end }}
			},
			{{- end }}
			{{- if .results.dynamic_sort_table }}
			"dynamic_sort_subtable": {
				Type:     schema.TypeBool,
				Optional: true,
				Default:  false,
			},
			{{- end }}
            {{- template "SCHEMA" .results }}
		},
	}
}

{{ template "CREATERESFUNC" . }}

{{ template "UPDATERESFUNC" . }}

{{ template "DELETERESFUNC" . }}

{{ template "READRESFUNC" . }}

{{if not .child_path}}{{ template "FLATTEN" .results }}{{end}}

{{ template "refreshObject" . }}

{{if not .child_path}}{{ template "EXPAND" .results }}{{end}}

{{ template "GETOBJECT" . }}

{{if eq .results.category "complex"}}{{ template "getEmptyObject" . }}{{end}}

{{end}}
